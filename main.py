import streamlit as st
import pandas as pd
import google.generativeai as genai
import os
from datetime import datetime
from typing import Dict, List, Tuple
import re

# Configura√ß√£o inicial
st.set_page_config(
    layout="wide",
    page_title="Gerador de Briefings - SYN",
    page_icon="üìã"
)

# CSS personalizado
st.markdown("""
<style>
    .main {
        background-color: #f8f9fa;
    }
    .stButton button {
        background-color: #1e88e5 !important;
        color: white !important;
        border-radius: 8px !important;
        padding: 10px 24px !important;
        font-weight: 500 !important;
    }
    .briefing-card {
        background-color: white;
        border-radius: 12px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        border-left: 4px solid #1e88e5;
    }
    .product-header {
        color: #1e88e5;
        font-size: 1.4em;
        font-weight: 600;
        margin-bottom: 15px;
    }
    .section-header {
        color: #333;
        font-size: 1.2em;
        font-weight: 600;
        margin: 20px 0 10px 0;
        padding-bottom: 5px;
        border-bottom: 2px solid #e0e0e0;
    }
    .platform-strategy {
        background-color: #f5f7fa;
        padding: 15px;
        border-radius: 8px;
        margin: 10px 0;
    }
    .input-container {
        background-color: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }
</style>
""", unsafe_allow_html=True)

# Dicion√°rio de descri√ß√µes de produtos (baseado nos briefings anteriores)
PRODUCT_DESCRIPTIONS = {
    "FORTENZA": "Tratamento de sementes inseticida, focado no Cerrado e posicionado para controle do complexo de lagartas e outras pragas iniciais. Comunica√ß√£o focada no mercado 'on farm' (tratamento feito na fazenda).",
    "ALADE": "Fungicida para controle de doen√ßas em soja, frequentemente posicionado em programa com Mitrion para controle de podrid√µes de vagens e gr√£os.",
    "VERDAVIS": "Inseticida e acaricida composto por PLINAZOLIN¬Æ technology (nova mol√©cula, novo grupo qu√≠mico, modo de a√ß√£o in√©dito) + lambda-cialotrina. KBFs: + mais choque, + mais espectro e + mais dias de controle.",
    "ENGEO PLENO S": "Inseticida de tradi√ß√£o, refer√™ncia no controle de percevejos. Mote: 'Nunca foi sorte. Sempre foi Engeo Pleno S'.",
    "MEGAFOL": "Bioativador da Syngenta Biologicals. Origem 100% natural (extratos vegetais e de algas Ascophyllum nodosum). Desenvolvido para garantir que a planta alcance todo seu potencial produtivo.",
    "MIRAVIS DUO": "Fungicida da fam√≠lia Miravis. Traz ADEPIDYN technology (novo ingrediente ativo, novo grupo qu√≠mico). Focado no controle de manchas foliares.",
    "AVICTA COMPLETO": "Oferta comercial de tratamento industrial de sementes (TSI). Composto por inseticida, fungicida e nematicida.",
    "MITRION": "Fungicida para controle de doen√ßas em soja, frequentemente posicionado em programa com Alade.",
    "AXIAL": "Herbicida para trigo. Composto por um novo ingrediente ativo. Foco no controle do azev√©m.",
    "CERTANO": "Bionematicida e biofungicida. Composto pela bact√©ria Bacillus velezensis. Controla nematoides e fungos de solo.",
    "MANEJO LIMPO": "Programa da Syngenta para manejo integrado de plantas daninhas.",
    "ELESTAL NEO": "Fungicida para controle de doen√ßas em soja e algod√£o.",
    "FRONDEO": "Inseticida para cana-de-a√ß√∫car com foco no controle da broca da cana.",
    "FORTENZA ELITE": "Oferta comercial de TSI. Solu√ß√£o robusta contra pragas, doen√ßas e nematoides do Cerrado.",
    "REVERB": "Produto para manejo de doen√ßas em soja e milho com a√ß√£o prolongada ou de espectro amplo.",
    "YIELDON": "Produto focado em maximizar a produtividade das lavouras.",
    "ORONDIS FLEXI": "Fungicida com flexibilidade de uso para controle de requeima, m√≠ldios e manchas.",
    "RIZOLIQ LLI": "Inoculante ou produto para tratamento de sementes que atua na rizosfera.",
    "ARVATICO": "Fungicida ou inseticida com a√ß√£o espec√≠fica para controle de doen√ßas foliares ou pragas.",
    "VERDADERO": "Produto relacionado √† sa√∫de do solo ou nutri√ß√£o vegetal.",
    "MIRAVIS": "Fungicida da fam√≠lia Miravis para controle de doen√ßas.",
    "MIRAVIS PRO": "Fungicida premium da fam√≠lia Miravis para controle avan√ßado de doen√ßas.",
    "INSTIVO": "Lagarticida posicionado como especialista no controle de lagartas do g√™nero Spodoptera.",
    "CYPRESS": "Fungicida posicionado para √∫ltimas aplica√ß√µes na soja, consolidando o manejo de doen√ßas.",
    "CALARIS": "Herbicida composto por atrazina + mesotriona para controle de plantas daninhas no milho.",
    "SPONTA": "Inseticida para algod√£o com PLINAZOLIN¬Æ technology para controle de bicudo e outras pragas.",
    "INFLUX": "Inseticida lagarticida premium para controle de todas as lagartas, especialmente helicoverpa.",
    "JOINER": "Inseticida acaricida com tecnologia PLINAZOLIN para culturas hortifr√∫ti.",
    "DUAL GOLD": "Herbicida para manejo de plantas daninhas.",
}

# Inicializar Gemini
gemini_api_key = os.getenv("GEMINI_API_KEY")
if not gemini_api_key:
    gemini_api_key = st.secrets.get("GEMINI_API_KEY", "")

if gemini_api_key:
    genai.configure(api_key=gemini_api_key)
    modelo_texto = genai.GenerativeModel("gemini-1.5-flash")
else:
    st.warning("API key do Gemini n√£o encontrada. Algumas funcionalidades estar√£o limitadas.")

# T√≠tulo do aplicativo
st.title("üìã Gerador de Briefings - SYN")
st.markdown("""
**Digite o conte√∫do da c√©lula do calend√°rio para gerar um briefing completo no padr√£o SYN.**
""")

# Fun√ß√µes principais
def extract_product_info(text: str) -> Tuple[str, str, str]:
    """Extrai informa√ß√µes do produto do texto da c√©lula"""
    if not text or not text.strip():
        return None, None, None
    
    text = str(text).strip()
    
    # Remover emojis e marcadores
    clean_text = re.sub(r'[üîµüü†üü¢üî¥üü£üîÉüì≤]', '', text).strip()
    
    # Padr√µes para extra√ß√£o
    patterns = {
        'product': r'\b([A-Z][A-Za-z\s]+(?:PRO|S|NEO|LLI|ELITE|COMPLETO|DUO|FLEXI|PLENO|XTRA)?)\b',
        'culture': r'\b(soja|milho|algod√£o|cana|trigo|HF|caf√©|citrus|batata|mel√£o|uva|tomate|multi)\b',
        'action': r'\b(depoimento|resultados|s√©rie|refor√ßo|controle|lan√ßamento|import√¢ncia|jornada|conceito|v√≠deo|a√ß√£o|diferenciais|awareness|problem√°tica|gloss√°rio|manejo|aplica√ß√£o|posicionamento)\b'
    }
    
    product_match = re.search(patterns['product'], clean_text, re.IGNORECASE)
    culture_match = re.search(patterns['culture'], clean_text, re.IGNORECASE)
    action_match = re.search(patterns['action'], clean_text, re.IGNORECASE)
    
    product = product_match.group(1).strip().upper() if product_match else None
    culture = culture_match.group(0).lower() if culture_match else "multi"
    action = action_match.group(0).lower() if action_match else "conscientiza√ß√£o"
    
    return product, culture, action

def generate_context(content, product_name, culture, action):
    """Gera o texto de contexto baseado nas informa√ß√µes"""
    # Usar a descri√ß√£o do produto do dicion√°rio em vez do Gemini
    description = PRODUCT_DESCRIPTIONS.get(product_name, "Descri√ß√£o do produto n√£o dispon√≠vel.")
    
    context = f"""
**{product_name} - {culture.upper()} - {action.upper()}**
Conte√∫do: {content}

Para essa pauta, vamos trabalhar com {product_name} na cultura do {culture}. O foco principal ser√° {action}.

{description}
"""
    return context

def generate_platform_strategy(product_name, culture, action, content):
    """Gera estrat√©gia por plataforma usando Gemini"""
    if not gemini_api_key:
        return "API key do Gemini n√£o configurada. Estrat√©gias por plataforma n√£o dispon√≠veis."
    
    prompt = f"""
    Como especialista em m√≠dias sociais para o agroneg√≥cio Syngenta, crie uma estrat√©gia de conte√∫do detalhada:

    **PRODUTO:** {product_name}
    **CULTURA:** {culture}
    **A√á√ÉO:** {action}
    **CONTE√öDO ORIGINAL:** {content}
    **DESCRI√á√ÉO DO PRODUTO:** {PRODUCT_DESCRIPTIONS.get(product_name, 'Produto agr√≠cola Syngenta')}

    **FORNECER ESTRAT√âGIA PARA:**
    - Instagram (Feed, Reels, Stories)
    - Facebook 
    - LinkedIn
    - WhatsApp Business
    - YouTube
    - Portal Mais Agro (blog)

    **INCLUIR PARA CADA PLATAFORMA:**
    1. Tipo de conte√∫do recomendado
    2. Formato ideal (v√≠deo, carrossel, est√°tico, etc.)
    3. Tom de voz apropriado
    4. CTA espec√≠fico
    5. Melhores pr√°ticas

    **FORMATO:** Markdown com se√ß√µes claras
    """
    
    try:
        response = modelo_texto.generate_content(prompt)
        return response.text
    except Exception as e:
        return f"Erro ao gerar estrat√©gia: {str(e)}"

def generate_briefing(content, product_name, culture, action):
    """Gera um briefing completo"""
    description = PRODUCT_DESCRIPTIONS.get(product_name, "Descri√ß√£o do produto n√£o dispon√≠vel.")
    context = generate_context(content, product_name, culture, action)
    platform_strategy = generate_platform_strategy(product_name, culture, action, content)
    
    briefing = f"""
<div class='briefing-card'>
    <div class='product-header'>{product_name} - {culture.upper()} - {action.upper()}</div>
    
    <div class='section-header'>üìã CONTEXTO E OBJETIVO</div>
    {context}
    
    <div class='section-header'>üéØ ESTRAT√âGIA POR PLATAFORMA</div>
    <div class='platform-strategy'>
        {platform_strategy}
    </div>
    
    <div class='section-header'>üìä FORMATOS SUGERIDOS</div>
    <ul>
        <li><strong>Instagram:</strong> Reels + Stories + Feed post</li>
        <li><strong>Facebook:</strong> Carrossel + Link post</li>
        <li><strong>LinkedIn:</strong> Artigo + Post informativo</li>
        <li><strong>WhatsApp:</strong> Card informativo + Link</li>
        <li><strong>YouTube:</strong> Shorts + V√≠deo explicativo</li>
        <li><strong>Portal Mais Agro:</strong> Blog post + Webstories</li>
    </ul>
    
    <div class='section-header'>üìû CONTATOS E OBSERVA√á√ïES</div>
    <ul>
        <li>Validar com especialista t√©cnico</li>
        <li>Checar disponibilidade de imagens/v√≠deos</li>
        <li>Incluir CTA para portal Mais Agro</li>
        <li>Seguir guidelines de marca Syngenta</li>
        <li>Revisar compliance regulat√≥rio</li>
    </ul>
</div>
"""
    return briefing

# Interface principal
st.markdown("### üìù Digite o conte√∫do da c√©lula do calend√°rio")

# Container de input
with st.container():
    st.markdown('<div class="input-container">', unsafe_allow_html=True)
    
    content_input = st.text_area(
        "Conte√∫do da c√©lula:",
        placeholder="Ex: megafol - s√©rie - potencial m√°ximo, todo o tempo",
        height=100,
        help="Cole aqui o conte√∫do exato da c√©lula do calend√°rio do Sheets"
    )
    
    # Campos opcionais para ajuste
    col1, col2, col3 = st.columns(3)
    
    with col1:
        data_input = st.date_input("Data prevista:", value=datetime.now())
    
    with col2:
        dia_semana = st.selectbox(
            "Dia da semana:",
            ["Segunda", "Ter√ßa", "Quarta", "Quinta", "Sexta", "S√°bado", "Domingo"]
        )
    
    with col3:
        formato_principal = st.selectbox(
            "Formato principal:",
            ["Reels + capa", "Carrossel + stories", "Blog + redes", "V√≠deo + stories", "Multiplataforma"]
        )
    
    generate_btn = st.button("üöÄ Gerar Briefing", type="primary")
    
    st.markdown('</div>', unsafe_allow_html=True)

# Processamento e exibi√ß√£o do briefing
if generate_btn and content_input:
    with st.spinner("Analisando conte√∫do e gerando briefing..."):
        # Extrair informa√ß√µes do produto
        product, culture, action = extract_product_info(content_input)
        
        if product and product in PRODUCT_DESCRIPTIONS:
            # Gerar briefing completo
            briefing = generate_briefing(content_input, product, culture, action)
            
            # Exibir briefing
            st.markdown("## üìã Briefing Gerado")
            st.markdown(briefing, unsafe_allow_html=True)
            
            # Bot√£o de download
            st.download_button(
                label="üì• Baixar Briefing",
                data=briefing,
                file_name=f"briefing_{product}_{data_input.strftime('%Y%m%d')}.html",
                mime="text/html"
            )
            
            # Informa√ß√µes extras
            with st.expander("‚ÑπÔ∏è Informa√ß√µes Extra√≠das"):
                st.write(f"**Produto:** {product}")
                st.write(f"**Cultura:** {culture}")
                st.write(f"**A√ß√£o:** {action}")
                st.write(f"**Data:** {data_input.strftime('%d/%m/%Y')}")
                st.write(f"**Dia da semana:** {dia_semana}")
                st.write(f"**Formato principal:** {formato_principal}")
                st.write(f"**Descri√ß√£o:** {PRODUCT_DESCRIPTIONS[product]}")
                
        elif product:
            st.warning(f"Produto '{product}' n√£o encontrado no dicion√°rio. Verifique a grafia.")
            st.info("Produtos dispon√≠veis: " + ", ".join(list(PRODUCT_DESCRIPTIONS.keys())[:10]) + "...")
        else:
            st.error("N√£o foi poss√≠vel identificar um produto no conte√∫do. Tente formatos como:")
            st.code("""
            megafol - s√©rie - potencial m√°ximo, todo o tempo
            verdavis - soja - depoimento produtor
            engeo pleno s - milho - controle percevejo
            miravis duo - algod√£o - refor√ßo preventivo
            """)

# Se√ß√£o de exemplos
with st.expander("üìö Exemplos de Conte√∫do", expanded=True):
    st.markdown("""
    ### üéØ Formatos Reconhecidos:
    
    **Padr√£o:** `PRODUTO - CULTURA - A√á√ÉO` ou `PRODUTO - A√á√ÉO`
    
    **Exemplos:**
    - `megafol - s√©rie - potencial m√°ximo, todo o tempo`
    - `verdavis - milho - resultados do produto`
    - `engeo pleno s - soja - resultados GTEC`
    - `miravis duo - algod√£o - depoimento produtor`
    - `axial - trigo - refor√ßo p√≥s-emergente`
    - `manejo limpo - import√¢ncia manejo antecipado`
    - `certano HF - a jornada de certano`
    - `elestal neo - soja - depoimento de produtor`
    - `fortenza - a jornada da semente mais forte - EP 01`
    - `reverb - v√≠deo conceito`
    """)

# Lista de produtos reconhecidos
with st.expander("üìã Produtos Reconhecidos"):
    col1, col2, col3 = st.columns(3)
    products = list(PRODUCT_DESCRIPTIONS.keys())
    
    with col1:
        for product in products[:10]:
            st.write(f"‚Ä¢ {product}")
    
    with col2:
        for product in products[10:20]:
            st.write(f"‚Ä¢ {product}")
    
    with col3:
        for product in products[20:]:
            st.write(f"‚Ä¢ {product}")

# Rodap√©
st.markdown("---")
st.caption("""
Ferramenta de gera√ß√£o autom√°tica de briefings - Padr√£o SYN üìã
Digite o conte√∫do da c√©lula do calend√°rio para gerar briefings completos.
""")
